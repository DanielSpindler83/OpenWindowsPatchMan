// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenWindowsPatchMan.Agent.Core.Database;

#nullable disable

namespace OpenWindowsPatchMan.Agent.Service.Migrations
{
    [DbContext(typeof(PatchManDbContext))]
    [Migration("20240901125541_AddInstallTable")]
    partial class AddInstallTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("OpenWindowsPatchMan.Agent.Core.Models.UpdateInstallation", b =>
                {
                    b.Property<int>("UpdateInstallationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("InstallationResultCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallationStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InstallationTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RebootRequired")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdateId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UpdateInstallationId");

                    b.HasIndex("UpdateId");

                    b.ToTable("UpdateInstallation", (string)null);
                });

            modelBuilder.Entity("OpenWindowsPatchMan.Agent.Core.Models.WindowsUpdateInfo", b =>
                {
                    b.Property<string>("UpdateId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BundledUpdates")
                        .HasColumnType("TEXT");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatePublished")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeploymentAction")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("DownloadSizeMB")
                        .HasColumnType("REAL");

                    b.Property<DateTimeOffset>("FirstSeenTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallationRebootBehavior")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsBeta")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDownloaded")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsInstalled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUninstallable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KBArticleIDs")
                        .HasColumnType("TEXT");

                    b.Property<string>("MoreInfoUrls")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseNotes")
                        .HasColumnType("TEXT");

                    b.Property<int>("RevisionNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityBulletinIDs")
                        .HasColumnType("TEXT");

                    b.Property<string>("SupersededUpdateIDs")
                        .HasColumnType("TEXT");

                    b.Property<string>("SupportUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UninstallationNotes")
                        .HasColumnType("TEXT");

                    b.Property<string>("UninstallationRebootBehavior")
                        .HasColumnType("TEXT");

                    b.Property<string>("UninstallationSteps")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("UpdateCheckTime")
                        .HasColumnType("TEXT");

                    b.HasKey("UpdateId");

                    b.ToTable("WindowsUpdateInfo", (string)null);
                });

            modelBuilder.Entity("OpenWindowsPatchMan.Agent.Core.Models.UpdateInstallation", b =>
                {
                    b.HasOne("OpenWindowsPatchMan.Agent.Core.Models.WindowsUpdateInfo", "WindowsUpdateInfo")
                        .WithMany("UpdateInstallations")
                        .HasForeignKey("UpdateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WindowsUpdateInfo");
                });

            modelBuilder.Entity("OpenWindowsPatchMan.Agent.Core.Models.WindowsUpdateInfo", b =>
                {
                    b.Navigation("UpdateInstallations");
                });
#pragma warning restore 612, 618
        }
    }
}
